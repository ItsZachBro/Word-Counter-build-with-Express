export declare function rotateArray<T>(array: T[], offset: number): T[];
export declare function removeDuplicates<A>(array: A[]): A[];
export declare function getShallowCopy<A>(array: A[]): A[];
export declare function sumTo(array: number[], index: number): number;
export declare function wrapValue(value: number, max: number): number;
export declare function isTypeError(error: unknown): error is Error;
export declare function getWrappedArrayElement<A>(array: A[], index: number): A;
export declare function removeArrayElement<A>(array: A[], index: number): A[];
export declare const getTypedObjectKeys: <T extends object>(obj: T) => T[];
export declare function arrayDifference<T>(array1: readonly T[], array2: readonly T[]): T[];
export declare function getEvenArrayElements<A>(array: A[]): A[];
export declare function getEvenNumbers(max: number | string): number[];
export declare function generateOrderedCombinations<A>(array: A[], result: A[][], combinationSize?: number): void;
